// <auto-generated />
using System;
using GYM_GetYourMuscles.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GYM_GetYourMuscles.Domain.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210105162227_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.WorkoutRoutine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutRoutines");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.WorkoutRoutineExercise", b =>
                {
                    b.Property<long>("ExerciseId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkoutRoutineId")
                        .HasColumnType("bigint");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId", "WorkoutRoutineId");

                    b.HasIndex("WorkoutRoutineId");

                    b.ToTable("WorkoutRoutineExercise");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.WorkoutRoutine", b =>
                {
                    b.HasOne("GYM_GetYourMuscles.Domain.Model.User", "User")
                        .WithMany("Training")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.WorkoutRoutineExercise", b =>
                {
                    b.HasOne("GYM_GetYourMuscles.Domain.Model.Exercise", "Exercise")
                        .WithMany("WorkoutRoutineExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GYM_GetYourMuscles.Domain.Model.WorkoutRoutine", "WorkoutRoutine")
                        .WithMany("WorkoutRoutineExercises")
                        .HasForeignKey("WorkoutRoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutRoutine");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.Exercise", b =>
                {
                    b.Navigation("WorkoutRoutineExercises");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.User", b =>
                {
                    b.Navigation("Training");
                });

            modelBuilder.Entity("GYM_GetYourMuscles.Domain.Model.WorkoutRoutine", b =>
                {
                    b.Navigation("WorkoutRoutineExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
